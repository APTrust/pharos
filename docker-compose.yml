# This is the development version.
# Which docker-compose defaults to if no param is given.
# https://wiki.ssdt-ohio.org/display/rtd/Using+nginx-proxy
version: '3'
services:
  db:
    image: postgres:9.6.6-alpine
    environment:
      POSTGRES_USER: pharos
      POSTGRES_DB: pharos
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
  pharos:
    image: registry.gitlab.com/aptrust/container-registry/pharos:${DOCKER_TAG_NAME:-latest}
    command: bundle exec puma -w3 -p9292 -e ${RAILS_ENV}
    labels:
      - VIRTUAL_HOST=${VIRTUAL_HOST:-pharos.localhost}
      - VIRTUAL_PORT=9292
      - LETSENCRYPT_HOST=${VIRTUAL_HOST:-}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-ops@aprust.org}
    volumes:
      - ./.env:/pharos/.env
      - assets:/pharos/public
      - ${DOCKERAPP_DATA_PATH:-./docker}/log:/pharos/log
    depends_on:
      - db
      - migration
      - nginx-proxy
    ports:
      - "9292:9292"
    env_file:
      - ".env"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${PHAROS_LOGSERVER}:${PHAROS_LOGSERVER_PORT}"

  migration:
    image: registry.gitlab.com/aptrust/container-registry/pharos:${DOCKER_TAG_NAME:-latest}
    # Note: Sleep 5 seconds before init db, so psql has time to start up.
    command: /bin/bash -c "sleep 15 && rake db:exists && rake db:migrate || (echo 'Init DB setup' && rake db:setup && rake pharos:setup)"
    env_file:
      - ".env"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${PHAROS_LOGSERVER}:${PHAROS_LOGSERVER_PORT}"
    depends_on:
      - db
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - .${DOCKERAPP_DATA_PATH:-./docker/nginx-proxy}/certs:/etc/nginx/certs:ro
      - .${DOCKERAPP_DATA_PATH:-./docker/nginx-proxy}/vhost.d:/etc/nginx/vhost.d}
      - .${DOCKERAPP_DATA_PATH:-./docker/nginx-proxy}/pharos.localhost:/etc/nginx/vhost.d/pharos.localhost}
      - assets:/etc/share/nginx/html/pharos
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.5
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - .${DOCKERAPP_DATA_PATH:-./docker/nginx-proxy}/certs:/etc/nginx/certs:rw
      - .${DOCKERAPP_DATA_PATH:-./docker/nginx-proxy}/vhost.d:/etc/nginx/vhost.d}
      - .${DOCKERAPP_DATA_PATH:-./docker/nginx-proxy}/pharos.localhost:/etc/nginx/vhost.d/pharos.localhost}
      - assets:/etc/share/nginx/html/pharos
 volumes:
  pgdata:
  assets:
