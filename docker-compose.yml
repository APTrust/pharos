version: '3'
services:
  db:
    image: postgres:9.6.6-alpine
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ${DOCKERAPP_DATA_PATH:-./docker}/pgdata:/pgdata
    networks:
      - backend
    ports:
      - '5432:5432'
  pharos:
    image: registry.gitlab.com/aptrust/container-registry/pharos:${DOCKER_TAG_NAME:-latest}
    restart: always
    command: bundle exec puma -w3 -t 8:32 --preload -p9292 -e ${RAILS_ENV}
    volumes:
      - assets:/pharos/public
      - ${DOCKERAPP_DATA_PATH:-./docker}/log:/pharos/log
    depends_on:
      - db
      - migration
    ports:
      - 9292
    networks:
      - backend
      - frontend
    env_file:
      - ".env"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${PHAROS_LOGSERVER}:${PHAROS_LOGSERVER_PORT}"
  migration:
    image: registry.gitlab.com/aptrust/container-registry/pharos:${DOCKER_TAG_NAME:-latest}
    # Note: Sleep 5 seconds before init db, so psql has time to start up.
    command: /bin/bash -c "sleep 15 && rake db:exists && rake db:migrate || (echo 'Init DB setup' && rake db:setup && rake pharos:setup)"
    env_file:
      - ".env"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${PHAROS_LOGSERVER}:${PHAROS_LOGSERVER_PORT}"
    depends_on:
      - db
    networks:
      - backend
  nginx-proxy-pharos:
    image: registry.gitlab.com/aptrust/container-registry/nginx-proxy-pharos:${DOCKER_TAG_NAME:-latest}
    restart: always
    container_name: nginx-proxy-pharos
    ports:
      - "80:80"
      - "443:443"
      - 18080 # nginx_status port
#    environment:
#      - DEFAULT_HOST=docker1.aptrust.org
#      - DHPARAM_GENERATION=false
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - ${DOCKERAPP_DATA_PATH:-./docker}/nginx-proxy/certs:/etc/nginx/certs:ro
      - ${DOCKERAPP_DATA_PATH:-./docker}/nginx-proxy/html:/usr/share/nginx/html:rw
      - ${DOCKERAPP_DATA_PATH:-./docker}/nginx-proxy/:/var/log/nginx/:rw
      - ./docker/nginx-proxy/pharosstatic_location:/etc/nginx/vhost.d/${VIRTUAL_HOST}_location
      - ./docker/nginx-proxy/graylog_nginx.conf:/etc/nginx/conf.d/graylog_nginx.conf
      - ./docker/nginx-proxy/proxy_settings.conf:/etc/nginx/conf.d/proxy_settings.conf
      - ${DOCKERAPP_DATA_PATH:-./docker}/nginx-proxy/vhost.d:/etc/nginx/vhost.d
      - assets:/etc/share/nginx/html/pharos
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    networks:
      - frontend
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    depends_on:
      - nginx-proxy-pharos
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy-pharos
      - DEBUG=false
    networks:
      - frontend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - assets:/usr/share/nginx/html/pharos:rw
      - ${DOCKERAPP_DATA_PATH:-./docker}/nginx-proxy/certs:/etc/nginx/certs:rw
      - ${DOCKERAPP_DATA_PATH:-./docker}/nginx-proxy/html:/usr/share/nginx/html:rw
      - ${DOCKERAPP_DATA_PATH:-./docker}/nginx-proxy/vhost.d:/etc/nginx/vhost.d:rw
networks:
  frontend:
  backend:

volumes:
  pgdata:
  assets:
