language: ruby

sudo: required

env:
  global:
  - CACHE_DIR=/home/travis/docker/
  - DOCKER_CACHE_FILE=/home/travis/docker/cache.tar.gz

services:
  - docker

cache:
  directories:
  - $CACHE_DIR

before_script:
    - if [ -f ${DOCKER_CACHE_FILE} ]; then gunzip -c ${DOCKER_CACHE_FILE} | docker load; fi
    - sudo apt update -y
    - sudo apt install --only-upgrade docker-ce -y
    - sudo service postgresql stop
script:
    - docker build -t pharos-ci:latest .
    - docker network create -d bridge pharos-test-net
    - docker run -d --network pharos-test-net --hostname pharos-test-db --name pharos-test-db -p 5432:5432 postgres:9.6.6-alpine
    - docker run -e RAILS_ENV=test -e PHAROS_DB_NAME=travis_ci_test -e PHAROS_DB_HOST=pharos-test-db -e PHAROS_DB_USER=postgres --network pharos-test-net --rm pharos-ci:latest /bin/bash -c "echo 'Init DB setup'; rake db:setup; rake db:migrate; rake pharos:setup"
     - export
     - docker run --rm -it --network pharos-test-net -e PHAROS_DB_NAME=travis_ci_test -e PHAROS_DB_HOST=pharos-test-db -e PHAROS_DB_USER=postgres pharos-ci:latest /bin/bash -c "bin/rails spec"
#    - if [[ ${TRAVIS_BRANCH} == "master" ]] && [[ ${TRAVIS_PULL_REQUEST} == "false" ]]; then mkdir -p $(dirname ${DOCKER_CACHE_FILE}) ; docker save $(docker history -q ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} | grep -v '<missing>') | gzip > ${DOCKER_CACHE_FILE}; fi
    - if [[ ${TRAVIS_PULL_REQUEST} == "false" ]]; then mkdir -p $(dirname ${DOCKER_CACHE_FILE}) ; docker save $(docker history -q ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} | grep -v '<missing>') | gzip > ${DOCKER_CACHE_FILE}; fi
