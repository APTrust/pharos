openapi: 3.0.0
info:
  description: >-
    This is the documentation for the APTrust Pharos Member API, which can be
    found in another location at
    [https://wiki.aptrust.org/Member_API](https://wiki.aptrust.org/Member_API).
    The Member API basepath is
    [https://repo.aptrust.org/member-api/v2](https://repo.aptrust.org/member-api/v2).
  version: 0.2-oas3
  title: APTrust Member API
  contact:
    email: help@aptrust.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
servers:
  - url: 'https://demo.aptrust.org'
    description: APTrust Demo/Test server
  - url: 'https://repo.aptrust.org'
    description: APTrust Production server
  - url: 'https://twofactor.docker1.aptrust.org'
    description: APTrust 2fa staging server for cors check
paths:
  '/member-api/v2/events/{generic_file_identifier}':
    get:
      summary: Premis Events of a generic file
      description: >-
        List of Premis Events belonging to a particular Generic File. It
        requires that the user specify the generic_file_identifer as
        url-encoded, and as part of the base URL.
      tags:
        - events
      responses:
        '200':
          description: A JSON array of Premis Events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - in: path
          name: generic_file_identifier
          schema:
            type: string
          description: >-
            Premis Events belonging to a particular Generic File. Requires to
            specify the generic_file_identifer as url-encoded.
          required: true
        - name: event_identifier
          in: query
          schema:
            type: string
          description: >-
            The unique identifier for an event in the APTrust repository. It is
            generated by APTrust when the event is created.
        - name: event_type
          in: query
          schema:
            type: string
          description: Return only the Premis Events with this event_type attribute.
        - name: intellectual_object_identifier
          in: query
          schema:
            type: string
          description: Return only the Premis Events with this exact intellectual object identifier
        - name: intellectual_object_identifier_like
          in: query
          schema:
            type: string
          description: Return only Premis Events whose intellectual object identifier contains the specified string.
        - name: generic_file_identifier
          in: query
          schema:
            type: string
          description: Return only the Premis Events with this exact generic file identifier. 
        - name: generic_file_identifier_like
          in: query
          schema:
            type: string
          description: Return only Premis Events whose intellectual object identifier contains the specified string
        - name: outcome
          in: query
          schema:
            type: string
          description: Outcome of the event
        - name: created_before
          in: query
          schema:
            type: string
          description: Premis Events created before the specified timestamp
        - name: created_after
          in: query
          schema:
            type: string
          description: Premis Events created after the specified timestamp
        - name: page
          in: query
          schema:
            type: string
          description: >-
            Return page X of results, where X is an integer. If this is not specified, it defaults to 1. 
        - name: per_page
          in: query
          schema:
            type: string
          description: >-
            Number of items in the page of results. If this is not specified, it defaults to 10.  
  '/member-api/v2/events/{intellectual_object_identifier}':
    get:
      tags:
        - events
      summary: Premis Events of an intellectual object
      description: >-
        List of Premis Events belonging to a particular intellectual object. It
        requires that the user specify the generic_file_identifer as
        url-encoded, and as part of the base URL.
      responses:
        '200':
          description: A JSON array of Premis Events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
      parameters:
        - in: path
          name: intellectual_object_identifier
          schema:
            type: string
          description: >-
            Premis Events belonging to a particular Intellectual
            Object. Requires the intellectual_object_identifer to be
            url-encoded.
          required: true
          example: virginia.edu/va.edu_dc
        - name: event_identifier
          in: query
          schema:
            type: string
          description: >-
            The unique identifier for an event in the APTrust repository. It is
            generated by APTrust when the event is created.
        - name: event_type
          in: query
          schema:
            type: string
          description: Refers to the type of Premis Event that was created.
        - name: intellectual_object_identifier
          in: query
          schema:
            type: string
          description: Return only the Premis Events with this exact intellectual object identifier
        - name: intellectual_object_identifier_like
          in: query
          schema:
            type: string
          description: Return only Premis Events whose intellectual object identifier contains the specified string.
        - name: generic_file_identifier
          in: query
          schema:
            type: string
          description: Return only the Premis Events with this exact generic file identifier. 
        - name: generic_file_identifier_like
          in: query
          schema:
            type: string
          description: Return only Premis Events whose intellectual object identifier contains the specified string
        - name: outcome
          in: query
          schema:
            type: string
          description: Outcome of the event
        - name: created_before
          in: query
          schema:
            type: string
          description: Premis Events created before the specified timestamp
        - name: created_after
          in: query
          schema:
            type: string
          description: Premis Events created after the specified timestamp
        - name: page
          in: query
          schema:
            type: string
          description: >-
            Return page X of results, where X is an integer. If this is not specified, it defaults to 1. 
        - name: per_page
          in: query
          schema:
            type: string
          description: >-
            Number of items in the page of results. If this is not specified, it defaults to 10.  
  '/member-api/v2/events/{institution_identifier}':
    get:
      tags:
        - events
      summary: Premis events of a specific institution
      description: List of Premis Events belonging to a particular institution.
      responses:
        '200':
          description: A JSON array of Premis Events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
      parameters:
        - in: path
          name: institution_identifier
          schema:
            type: string
          description: '"List of Premis Events belonging to a particular institution."'
          required: true
        - name: event_identifier
          in: query
          schema:
            type: string
          description: >-
            The unique identifier for an event in the APTrust repository. It is
            generated by APTrust when the event is created.
        - name: event_type
          in: query
          schema:
            type: string
          description: Refers to the type of Premis Event that was created.
        - name: intellectual_object_identifier
          in: query
          schema:
            type: string
          description: Return only the Premis Events with this exact intellectual object identifier
        - name: intellectual_object_identifier_like
          in: query
          schema:
            type: string
          description: Return only Premis Events whose intellectual object identifier contains the specified string.
        - name: generic_file_identifier
          in: query
          schema:
            type: string
          description: Return only the Premis Events with this exact generic file identifier. 
        - name: generic_file_identifier_like
          in: query
          schema:
            type: string
          description: Return only Premis Events whose intellectual object identifier contains the specified string
        - name: outcome
          in: query
          schema:
            type: string
          description: Outcome of the event
        - name: created_before
          in: query
          schema:
            type: string
          description: Premis Events created before the specified timestamp
        - name: created_after
          in: query
          schema:
            type: string
          description: Premis Events created after the specified timestamp
        - name: page
          in: query
          schema:
            type: string
          description: >-
            Return page X of results, where X is an integer. If this is not specified, it defaults to 1. 
        - name: per_page
          in: query
          schema:
            type: string
          description: >-
            Number of items in the page of results. If this is not specified, it defaults to 10.  
  '/member-api/v2/files/{intellectual_object_identifier}':
    get:
      description: >-
        Returns a list of Generic Files belonging to a particular Intellectual
        Object. It requires that the user specify the
        intellectual_object_identifer as url-encoded, and as part of the base
        URL.
      responses:
        '200':
          description: A JSON array of intellectual objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files'
      parameters:
        - name: intellectual_object_identifier 
          in: path
          schema:
            type: string
          description: >-
            Premis Events belonging to a particular Intellectual
            Object. Requires the intellectual_object_identifer to be
            url-encoded.
          required: true
        - name: identifier
          in: query
          schema:
            type: string
          description: >-
            Return only the Generic Files with this exact identifier.
        - name: identifier_like
          in: query
          schema:
            type: string
          description: >-
            Return only Generic Files whose identifier contains the 
            specified string
        - name: uri
          in: query
          schema:
            type: string
          description: >-
           Return only the Generic Files with this exact URI.
        - name: uri_like
          in: query
          schema:
            type: string
          description: >-
           Return only Generic Files whose URI contains the specified string.
        - name: file_format
          in: query
          schema:
            type: string
          description: >-
           Return only Generic Files that have the specified file format.  
        - name: created_before
          in: query
          schema:
            type: string
            format: date-time
          description: >-
            Return only Generic Files created before the specified timestamp.
        - name: created_after
          in: query
          schema:
            type: string
            format: date-time
          description: >-
            Return only Generic Files created after the specified timestamp.
        - name: updated_before
          in: query
          schema:
            type: string
            format: date-time
          description: >-
            Return only Generic Files updated before the specified timestamp.
        - name: updated_after
          in: query
          schema:
            type: string
            format: date-time
          description: >-
            Return only Generic Files updated after the specified timestamp.
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: >-
            Return page X of results, where X is an integer. If this is not specified, it defaults to 1.
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
          description: >-
            The number of items to include in the page of results. If this is not specified, it defaults to 10.  
  '/member-api/v2/items':
    get:
      description: 
        "Returns a list of items in the APTrust work queue, including items where
        the work has been completed. Use this endpoint to check the status of
        any of the following bag ingest requests, restoration requests,
        deletion requests, requests to send items to DPN"
      responses:
        '200':
          description: A JSON array of intellectual objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items'
      parameters:
        - name: created_before
          in: query
          schema:
            type: string            
            format: date-time
          description: >-
            Return only items created before the specified timestamp.
        - name: created_after
          in: query
          schema:
            type: string            
            format: date-time
          description: >-
            Return only items created after the specified timestamp.
        - name: updated_before
          in: query
          schema:
            type: string            
            format: date-time
          description: >-
            Return only items updated before the specified timestamp.
        - name: updated_after
          in: query
          schema:
            type: string
            format: date-time
          description: >-
            Return only items updated after the specified timestamp.
        - name: name
          in: query
          schema:
            type: string
          description: >-
            Return only items with the exact tar file name. 
        - name: name_contains
          in: query
          schema:
            type: string
          description: >-
            Return only items whose tar file name contains the specified string.
        - name: etag
          in: query
          schema:
            type: string
          description: >-
            Return only items with the exact etag. 
        - name: etag_contains
          in: query
          schema:
            type: string
          description: >-
            Return only items whose etag name contains the specified string.
        - name: bag_date
          in: query
          schema:
            type: string
          description: >-
            Return only items with the exact bag_date specified.
        - name: item_action
          in: query
          schema:
            type: string
          description: >-
            Return only items having the specified action. 
        - name: stage
          in: query
          schema:
            type: string
          description: >-
            Return only items having the specified stage. 
        - name: status
          in: query
          schema:
            type: string
          description: >-
            Return only items having the specified status. Stages include "Requested", "Receive", "Fetch", "Unpack", "Validate", "Store", "Record", "Cleanup" and "Resolve". 
        - name: object_identifier
          in: query
          schema:
            type: string
          description: >-
            Return only items with the exact object identifier. 
        - name: object_identifier_contains
          in: query
          schema:
            type: string
          description: >-
            Return only items whose object identifier name contains the specified string.
        - name: file_identifier
          in: query
          schema:
            type: string
          description: >-
             Return only items with the exact file identifier specified. Useful for finding all items associated with a specific file. 
        - name: file_identifier_contains
          in: query
          schema:
            type: string
          description: >-
            Return only items whose file identifier contains the specified string.
        - name: access
          in: query
          schema:
            type: string
          description: >-
             Return only items with a specified level of access (such as consortial). Access is determined through the access level of the associated object. If an object has not yet been associated, access defaults to restricted.
        - name: queued
          in: query
          schema:
            type: boolean
          description: >-
            Can be true or false. When true, returns only items that have been added to the work queue, when false, returns only items that have not been queued.
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: >-
            Return page X of results, where X is an integer. If this is not specified, it defaults to 1.
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
          description: >-
            The number of items to include in the page of results. If this is not specified, it defaults to 10.  
        
  '/member-api/v2/objects':
    get:
      description: >-
        This endpoint returns a list of Intellectual Objects belonging to your institution. Intellectual Objects are usually fully ingested bags, though when bags are uploaded in multiple parts, the Intellectual Object may appear before all of the component bags are fully ingested.
      responses:
        '200':
          description: A JSON array of intellectual objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Pharos-API-KEY
    UserId:
      type: apiKey
      in: header
      name: X-Pharos-API-User
  schemas:
    Event:
      properties:
        id:
          type: integer
          description: APTrust's internal ID for an object.
          example: '10'
        identifier:
          type: string
          description: >-
            The unique identifier for an event in the APTrust repository. It is
            generated by APTrust when the event is created.
          example: 12f9dc69-e753-435f-b1fd-1d6bc1229957
        event_type:
          type: string
          description: Refers to the type of Premis Event that was created.
          example: identifier_assignment
          enum:
            - access assigment
            - capture
            - compression
            - creation
            - deaccession
            - decompression
            - decryption
            - deletion
            - message digest
            - fixity check
            - identifier_assignment
            - ingestion
            - migration
            - normalization
            - replication
            - digital signature validation
            - validation
            - virus_check
        date_time:
          type: string
          format: date-time
          description: Date when the premis event was created.
          example: '2014-11-24T18:56:11.348Z'
        detail:
          type: string
          description: >-
            A brief message explaining the purpose of the premis event generation,
            tailored to the type of event that was created.
          example: Assigned new storage URL identifier
        outcome_information:
          type: string
          description: >-
            Additional information pertinent to the individual process that was
            run in tandem with the event generation. May be empty.
          example: Generated with ruby SecureRandom.uuid()
        outcome:
          type: string
          description: Outcome of the event
          example: Success
          enum:
            - success
            - failure
        object:
          type: string
          description: >-
            Name and version of the code base or gem that was responsible for the
            process run in tandem with the event generation.
          example: Ruby 2.3.1
        agent:
          type: string
          description: Source of the object attribute listed above.
          example: 'http://www.ruby-doc.org'
        institution_id:
          type: integer
          description: ID of the institution to which the event belongs.
          example: '36'
        intellectual_object_id:
          type: integer
          description: ID of the intellectual object to which the event belongs.
          example: '5643'
        generic_file_id:
          type: integer
          description: >-
            ID of the generic file to which the event belongs, if it is associated
            with a generic file. May be empty.
          example: '31899'
        created_at:
          type: string
          format: date-time
          description: Time of creation of object
          example: '2014-11-24T18:56:11.348Z'
        updated_at:
          type: string
          format: date-time
          description: Time of last update of object
          example: '2014-11-24T19:17:03.715Z'
        intellectual_object_identifier:
          type: string
          description: Identifier of the intellectual object to which the event belongs.
          example: virginia.edu/va.edu_dc
        generic_file_identifier:
          example: virginia.edu/va.edu_dc/photo.tiff
        old_uuid:
          type: string
          description: >-
            Previous identifier of the event if the identifier was a duplicate -
            something Pharos no longer allows.
          example: ''
    File:
      properties:
        id:
          type: integer
          description: APTrust's internal ID for an object.
          example: '10'
        file_format:
          type: string
          description: >-
            Refers to the format of the generic file, e.g. application/pdf.
          example: 'application/pdf'
        identifier:
          type: string
          description: >-
            The unique identifier for an event in the APTrust repository. It is
            generated by APTrust when the event is created.
          example: 12f9dc69-e753-435f-b1fd-1d6bc1229957
        intellectual_object_id:
          type: integer
          description: ID of the intellectual object to which the file belongs.
          example: '5643'
        state:
          type: string
          description: >-
            'A' for active, 'D' is for deleted. An active bag is one that is still in the repository. Deleted bags have been deleted from the repository by some user. You can find out when a bag was deleted and who requested the deletion by querying the Items endpoint and filtering down to bags with a specific identifier and action=Delete.
          example: A
          enum:
            - A
            - D
        created_at:
          type: string
          format: date-time
          description: Time of creation of file
          example: '2014-11-24T18:56:11.348Z'
        updated_at:
          type: string
          format: date-time
          description: Time of last update of file
          example: '2014-11-24T19:17:03.715Z'
        last_fixity_check:
          type: string
          format: date-time
          description: Time of last fixity check of file
          example: '2014-11-24T19:17:03.715Z'
    Item:
      properties:
        id:
          type: integer
          description: APTrust's internal ID for an object.
          example: '10'
        created_at:
          type: string
          format: date-time
          description: Time of creation of item
          example: '2014-11-24T18:56:11.348Z'
        updated_at:
          type: string
          format: date-time
          description: Time of last update of item
          example: '2014-11-24T19:17:03.715Z'
        name:
          type: string
          description: >-
            Full file name of the item
          example: 'ncsu.1840.16-102.tar'
        etag:
          type: string
          description: >-
            AWS etag (entity tag) is a hash of the object. The ETag reflects changes only to the contents of an object, not its metadata. The ETag may or may not be an MD5 digest of the object data. Whether or not it is depends on how the object was created
          example: c8b80aadba6adabff06d35e029175daf
        bucket:
          type: string
          description: >-
            The receiving or restore bucket name.
          example: "aptrust.receiving.test.ncsu.edu"
        user:
          type: string
          description: User
          example: 'system@aptrust.org'
        note:
          type: string
          description: "Note about the stage of ingest or problems."
          example: 'No problems'
        stage:
          type: string
          description: >-
              Stage of work item. 
          example: "Ingest"
          enum:
            - Ingest
            - Fixity Check
            - Restore
            - Glacier Restore
            - Delete
            - DPN
        status:
          type: string
          description: >-
              Status of work item. 
          example: "Success"
          enum:
            - Success
            - Fail
            - Pending
            - Started
            - Cancelled 
        outcome:
          type: string
          description: >-
              Status of work item. 
          example: "Success"
          enum:
            - Success
            - Fail
        bag_date:
          type: string
          format: date-time
          description: Datestamp of bagging date.
          example: '2014-10-27T14:46:34.000Z'
        date:
          type: string
          format: date-time
          description: Datestamp.
          example: '2014-10-27T14:46:34.000Z'
        retry:
          type: string
          format: boolean
          description: If workitem has been retried for ingest/restore again due to transient errors.
          example: false
          enum:
            - true
            - false
        needs_admin_review:
          type: string
          format: boolean
          description: When an item needs admin review, it has failed ingest/restore and  an automatic retry did not resolve the failed action. APTrust support needed.
          example: false
          enum:
            - true
            - false
        queued_at:
          type: string
          format: date-time
          description: Datestamp when the item has been added to the work queue.
          example: '2014-10-27T14:46:34.000Z'
        size:
          type: integer
          description: "Size in bytes of work item"
          example: '463729'
        stage_started_at:
          type: string
          format: date-time
          description: Datestamp when the stage of ingest/restore has started
          example: null
          nullable: true
        institution_id:
          type: integer
          description: >-
              ID of institution
          example: "345172"
        object_identifier:
          type: string
          description: Identifier of the intellectual object.
          example: "ncsu.edu/ncsu.1840.16-1020"
        intellectual_object_id:
          type: integer
          description: Intellectual object ID.
          example: "859375938295"
        generic_file_identifier:
          type: string
          description: Identifier of the generic file.
          example: null
          nullable: true
        generic_file_id:
          type: integer
          description: Generic file  ID.
          example: null
          nullable: true

    Events:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    Files:
      type: array
      items:
        $ref: '#/components/schemas/File'
    Items:
      type: array
      items:
        $ref: '#/components/schemas/Item'
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
security:
  - ApiKeyAuth: []
    UserId: []
    

