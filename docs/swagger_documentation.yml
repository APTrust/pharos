openapi: 3.0.0
info:
  description: >-
    This is the documentation for the APTrust Pharos Member API, which can be
    found in another location at
    [https://wiki.aptrust.org/Member_API](https://wiki.aptrust.org/Member_API).
    The Member API basepath is
    [https://repo.aptrust.org/member-api/v2](https://repo.aptrust.org/member-api/v2).
  version: "0.1-oas3"
  title: APTrust Member API
  contact:
    email: help@aptrust.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
servers:
  - url: 'https://demo.aptrust.org'
    description: APTrust Demo/Test server
  - url: 'https://repo.aptrust.org'
    description: APTrust Production server
paths:
  /member-api/v2/events/{generic_file_identifier}:
    get:
      summary: Premis Events of a generic file
      description: >-
        List of Premis Events belonging to a particular Generic File. It requires
        that the user specify the generic_file_identifer as url-encoded, and as
        part of the base URL. 
      responses:
        '200':
          description: A JSON array of Premis Events
          content:
            application/json:
              schema:
                $ref: '#/definitions/event'
      parameters:
        - in: path
          name: generic_file_identifier
          schema: 
            type: string
          description: "Premis Events belonging to a particular Generic File. Requires to specify the generic_file_identifer as url-encoded."
          required: true
          example: "virginia.edu%2Fvirginia.bag_of_photos%2Fphoto_one.tiff"
        - name: id
          in: query
          schema:
            type: integer
          description: "APTrust's internal ID for an object."
          example: "10"
        - name: identifier
          in: query
          schema:
            type: string
          description: "The unique identifier for an event in the APTrust repository. It is generated by APTrust when the event is created."
        - name: event_type
          in: query
          schema:
            type: string
          description: "Refers to the type of Premis Event that was created."
        - name: date_time
          in: query
          schema:
            type: string
          description: "Date when the premis event was created."
        - name: detail
          in: query
          schema:
            type: string
          description: "A brief message explaining the purpose of the premis event generation, tailored to the type of event that was created."
        - name: outcome_information
          in: query
          type: string
          allowEmptyValue: true
          description: "Additional information pertinent to the individual process that was run in tandem with the event generation. May be empty."
        - name: outcome
          in: query
          schema:
            type: string
          description: "Outcome of the event"
          example: "Success"
          enum:
            - "success"
            - "failure"
        - name: object
          in: query
          schema:
            type: string
          description: "Name and version of the code base or gem that was responsible for the process run in tandem with the event generation."
          example: "Ruby 2.3.1"
        - name: agent
          in: query
          schema:
            type: string
          description: "Source of the object attribute listed above."
          example: "http://www.ruby-doc.org"
        - name: institution_id
          in: query
          schema:
            type: int
          description: "ID of the institution to which the event belongs."
        - name: intellectual_object_id
          in: query
          schema:
            type: int
          description: "ID of the intellectual object to which the event belongs."
        - name: generic_file_id
          in: query
          schema:
            type: string
          allowEmptyValue: true
          description: "ID of the generic file to which the event belongs, if it is associated with a generic file. May be empty."
        - name: created_at
          in: query
          type: datetime
          description: "Time of creation of object"
        - name: updated_at
          in: query
          schema:
            type: datetime
          description: "Time of last update of object"
        - name: old_uuid
          in: query
          schema:
            type: string
          description: "Previous identifier of the event if the identifier was a duplicate - something Pharos no longer allows."
          
  /member-api/v2/events/{intellectual_object_identifier}:
    get:
      summary: Premis Events of an intellectual object
      description: >-
        List of Premis Events belonging to a particular intellectual object. It requires
        that the user specify the generic_file_identifer as url-encoded, and as
        part of the base URL. 
      responses:
        '200':
          description: A JSON array of Premis Events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
      parameters:
        - in: path
          name: intellectual_object_identifier
          schema:
            type: string
          description: >-
              "List of Premis Events belonging to a particular Intellectual Object. Requires the intellectual_object_identifer to be url-encoded."
          required: true
          example: "virginia.edu/va.edu_dc"
  /member-api/v2/events/{institution_identifier}:
    get:
      summary: Premis events of a specific institution
      description: >-
        List of Premis Events belonging to a particular institution.
      responses:
        '200':
          description: A JSON array of Premis Events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
      parameters:
        - in: path
          name: institution_identifier
          schema:
            type: string
          description: >-
              "List of Premis Events belonging to a particular institution."
          required: true
  /member-api/v2/files:
    get:
      description: >-
        Returns a list of Generic Files belonging to a particular Intellectual
        Object. It requires that the user specify the
        intellectual_object_identifer as url-encoded, and as part of the base
        URL.
      responses:
        '200':
          description: A JSON array of intellectual objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      parameters:
        - in: query
          name: event_identifier
          schema:
            type: string
          description: >-
            Premis Event with this exact identifier. The identifier has the
            format of a Random hex
          example: 12f9dc69-e753-435f-b1fd-1d6bc1229957
  /member-api/v2/items:
    get:
      description: >-
        Returns a list of items in the APTrust work queue, including items where
        the work has been completed. Use this endpoint to check the status of
        any of the following: bag ingest requests, restoration requests,
        deletion requests, requests to send items to DPN
      responses:
        '200':
          description: A JSON array of intellectual objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /member-api/v2/objects:
    get:
      description: >-
        This endpoint returns a list of Intellectual Objects belonging to your institution.
        Intellectual Objects are usually fully ingested bags, though when bags are uploaded 
        in multiple parts, the Intellectual Object may appear before all of the component 
        bags are fully ingested.  
      responses:
        '200':
          description: A JSON array of intellectual objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

components:
  securitySchemes:
    ApiKeyAuth:        
      type: apiKey
      in: header
      name: X-Pharos-API-KEY
    UserId:
      type: apiKey
      in: header
      name: X-Pharos-API-User
security:
  - ApiKeyAuth: []
    UserId: []
definitions:
  event:
    properties:
      id:
        type: integer
        description: "APTrust's internal ID for an object."
        example: "10"
      identifier:
        type: string
        description: "The unique identifier for an event in the APTrust repository. It is generated by APTrust when the event is created."
        example: "12f9dc69-e753-435f-b1fd-1d6bc1229957"
      event_type:
        type: string
        description: "Refers to the type of Premis Event that was created."
        example: "identifier_assignment"
        enum:
            - access assigment
            - capture
            - compression
            - creation
            - deaccession
            - decompression
            - decryption
            - deletion
            - message digest
            - fixity check
            - identifier_assignment
            - ingestion
            - migration
            - normalization
            - replication
            - digital signature validation
            - validation
            - virus_check
      date_time:
        type: string
        description: "Date when the premis event was created."
        example: "2014-11-24T18:56:11.348Z"
      detail:
        type: string
        description: "A brief message explaining the purpose of the premis event generation, tailored to the type of event that was created."
        example: "Assigned new storage URL identifier"
      outcome_information: 
        type: string
        allowEmptyValue: true
        description: "Additional information pertinent to the individual process that was run in tandem with the event generation. May be empty."
        example: "Generated with ruby SecureRandom.uuid()"
      outcome:
        type: string
        description: "Outcome of the event"
        example: "Success"
        enum:
          - "success"
          - "failure"
      object:
        type: string
        description: "Name and version of the code base or gem that was responsible for the process run in tandem with the event generation."
        example: "Ruby 2.3.1"
      agent: 
        type: string
        description: "Source of the object attribute listed above."
        example: "http://www.ruby-doc.org"
      institution_id: 
        type: int
        description: "ID of the institution to which the event belongs."
        example: "123"
      intellectual_object_id: 
        type: int
        description: "ID of the intellectual object to which the event belongs."
        example: "123456"
      generic_file_id: 
        type: int
        allowEmptyValue: true
        description: "ID of the generic file to which the event belongs, if it is associated with a generic file. May be empty."
        example: "123456789"
      created_at: 
        type: datetime
        description: "Time of creation of object"
        example: "2014-11-24T18:56:11.348Z"
      updated_at: 
        type: datetime
        description: "Time of last update of object"
        example: "2014-11-24T19:17:03.715Z"
      intellectual_object_identifier: 
        type: string
        description: "Identifier of the intellectual object to which the event belongs."
        example: "virginia.edu/va.edu_dc"
      generic_file_identifier: 
        example: "virginia.edu/va.edu_dc/photo.tiff"
      old_uuid:   
        type: string
        description: "Previous identifier of the event if the identifier was a duplicate - something Pharos no longer allows."
        example: ""